from flask_sqlalchemy import SQLAlchemy
from dataclasses import dataclass
from sqlalchemy import Boolean, Column, DateTime, ForeignKeyConstraint, Index, Integer, Numeric, PrimaryKeyConstraint, UUID, Unicode, Uuid, Text, String

db = SQLAlchemy()


@dataclass
class MaestroArticulo(db.Model):
    __tablename__ = 'tbMaestroArticulo'

    IDArticulo = Column(String(25), primary_key=True)
    DescArticulo = Column(String(300), nullable=False)
    IDContador = Column(String(10))
    FechaAlta = Column(DateTime)
    IDEstado = Column(String(10), nullable=False)
    IDTipo = Column(String(10), nullable=False)
    IDFamilia = Column(String(10), nullable=False)
    IDSubfamilia = Column(String(10))
    CCVenta = Column(String(10))
    CCExport = Column(String(10))
    CCCompra = Column(String(10))
    CCImport = Column(String(10))
    CCVentaRegalo = Column(String(10))
    CCGastoRegalo = Column(String(10))
    CCStocks = Column(String(10))
    IDTipoIva = Column(String(10))
    IDPartidaEstadistica = Column(String(10))
    IDUdInterna = Column(String(10), nullable=False)
    IDUdVenta = Column(String(10))
    IDUdCompra = Column(String(10))
    PrecioEstandarA = Column(Numeric(23, 8), nullable=False)
    PrecioEstandarB = Column(Numeric(23, 8), nullable=False)
    FechaEstandar = Column(DateTime)
    UdValoracion = Column(Integer, nullable=False)
    PesoNeto = Column(Numeric(23, 8), nullable=False)
    PesoBruto = Column(Numeric(23, 8), nullable=False)
    TipoEstructura = Column(Boolean, nullable=False)
    IDTipoEstructura = Column(String(10))
    TipoRuta = Column(Boolean, nullable=False)
    IDTipoRuta = Column(String(10))
    CodigoBarras = Column(String(25))
    PuntoVerde = Column(Numeric(23, 8), nullable=False)
    PVPMinimo = Column(Numeric(23, 8), nullable=False)
    PorcentajeRechazo = Column(Numeric(23, 8), nullable=False)
    Plazo = Column(Numeric(23, 8), nullable=False)
    Volumen = Column(Numeric(23, 8), nullable=False)
    RecalcularValoracion = Column(Integer, nullable=False)
    CriterioValoracion = Column(Integer, nullable=False)
    GestionStockPorLotes = Column(Boolean, nullable=False)
    PrecioUltimaCompraA = Column(Numeric(23, 8), nullable=False)
    PrecioUltimaCompraB = Column(Numeric(23, 8), nullable=False)
    FechaUltimaCompra = Column(DateTime)
    IDProveedorUltimaCompra = Column(String(25))
    LoteMultiplo = Column(Integer, nullable=False)
    CantMinSolicitud = Column(Integer, nullable=False)
    CantMaxSolicitud = Column(Integer, nullable=False)
    LimitarPetDia = Column(Boolean, nullable=False)
    IdArticuloConfigurado = Column(String(25))
    ContRadical = Column(Integer)
    IdFamiliaConfiguracion = Column(String(10))
    PrecioBase = Column(Numeric(23, 8), nullable=False)
    Configurable = Column(Boolean, nullable=False)
    FechaCreacionAudi = Column(DateTime)
    FechaModificacionAudi = Column(DateTime)
    UsuarioAudi = Column(String(75))
    NivelPlano = Column(String(50))
    StockNegativo = Column(Boolean, nullable=False)
    PlazoFabricacion = Column(Numeric(23, 8), nullable=False)
    ParamMaterial = Column(Integer)
    ParamTerminado = Column(Integer)
    CapacidadDiaria = Column(Numeric(23, 8), nullable=False)
    AplicarLoteMRP = Column(Boolean, nullable=False)
    NSerieObligatorio = Column(Boolean, nullable=False)
    PuntosMarketing = Column(Integer, nullable=False)
    ValorPuntosMarketing = Column(Integer)
    ValorReposicionA = Column(Numeric(23, 8), nullable=False)
    ValorReposicionB = Column(Numeric(23, 8), nullable=False)
    FechaValorReposicion = Column(DateTime)
    ControlRecepcion = Column(Integer, nullable=False)
    IDEstadoHomologacion = Column(String(10))
    IDArticuloFinal = Column(String(25))
    GenerarOFArticuloFinal = Column(Boolean, nullable=False)
    IdDocumentoEspecificacion = Column(Integer)
    NivelModificacionPlan = Column(String(50))
    FechaModificacionNivelPlan = Column(DateTime)
    TipoFactAlquiler = Column(Integer, nullable=False)
    Seguridad = Column(Boolean, nullable=False)
    Reglamentacion = Column(Boolean, nullable=False)
    SeguridadReglamentacion = Column(Boolean, nullable=False)
    DiasMinimosFactAlquiler = Column(Integer, nullable=False)
    SinDtoEnAlquiler = Column(Boolean, nullable=False)
    SinSeguroEnAlquiler = Column(Boolean, nullable=False)
    NecesitaOperario = Column(Boolean, nullable=False)
    IDConcepto = Column(String(25))
    CCVentaGRUPO = Column(String(10))
    CCExportGRUPO = Column(String(10))
    CCImportGRUPO = Column(String(10))
    CCCompraGRUPO = Column(String(10))
    FacturacionAsociadaMaq = Column(Boolean, nullable=False)
    FactTasaResiduos = Column(Boolean, nullable=False)
    NoImprimirEnFactura = Column(Boolean, nullable=False)
    IDArticuloContenedor = Column(String(25))
    QContenedor = Column(Numeric(23, 8))
    IDArticuloEmbalaje = Column(String(25))
    QEmbalaje = Column(Numeric(23, 8))
    Color = Column(Integer)
    IDCaracteristicaArticulo1 = Column(String(2))
    IDCaracteristicaArticulo2 = Column(String(2))
    IDCaracteristicaArticulo3 = Column(String(2))
    IDCaracteristicaArticulo4 = Column(String(2))
    IDCaracteristicaArticulo5 = Column(String(2))
    IDArticuloPadre = Column(String(25))
    TipoPrecio = Column(Integer)
    IDTipoProducto = Column(String(10))
    IDTipoMaterial = Column(String(10))
    IDTipoSubMaterial = Column(String(10))
    IDTipoEnvase = Column(String(10))
    IDComerIndus = Column(String(10))
    IDTipoIVAReducido = Column(String(10))
    IDUdInterna2 = Column(String(10))
    Observaciones = Column(Text)
    PorcenIVANoDeducible = Column(Numeric(23, 8))
    PrecioBaseConfigurado = Column(Numeric(23, 8))
    Alias = Column(String(35))
    IDCategoria = Column(String(25))
    IDAnada = Column(String(10))
    IDColorVino = Column(String(10))
    IDCategoriaVino = Column(String(10))
    IDFormato = Column(String(10))
    IDMarcaComercial = Column(String(10))
    IDEmpresa = Column(String(10))
    RetencionIRPF = Column(Boolean, nullable=False)
    IncluirEnEMCS = Column(Boolean, nullable=False)
    ClaveDeclaracion = Column(String(10))
    IDRegistroFitosanitario = Column(String(10))
    RiquezaNPK = Column(String(100))
    IDTipoAbono = Column(String(10))
    IDTipoFertilizacion = Column(String(10))
    ClaveProductoSilicie = Column(String(3))
    TipoEnvaseSilicie = Column(String(4))
    ExcluirSilicie = Column(Boolean, nullable=False)
    IDCalificacion = Column(String(10))
    IDProductoVino = Column(String(10))
    IDPaisOrigen = Column(String(10))
    CodigoEstructura = Column(String(10))
    Certif31 = Column(Boolean)
    Ubicacion = Column(String(10))
    Codigo3 = Column(String(20))
    Descripcion2 = Column(String(255))
    INFAPP = Column(Boolean)
    EJEN15085 = Column(Boolean)
    TIPO15085 = Column(String(5))
    ExcluirCupos = Column(Boolean, nullable=False)
    IDCampanaCupoClasificacion = Column(String(10))
    KGPlastico = Column(Numeric(23, 8), nullable=False)
    KGPlasticoNR = Column(Numeric(23, 8), nullable=False)
    ClaveProducto = Column(String(1))
    GestionContraPedidoVenta = Column(Boolean, nullable=False)
    UsuarioCreacionAudi = Column(String(75))
    Espesor = Column(Numeric(23, 8))
    Activo = Column(Boolean, nullable=False)
    Venta = Column(Boolean, nullable=False)



@dataclass
class OrdenFabricacion(db.Model):
    __tablename__ = 'tbOrdenFabricacion'

    IDOrden = db.Column(db.Integer, primary_key=True)
    NOrden = db.Column(db.String(25), nullable=False)
    IDContador = db.Column(db.String(10))
    IDArticulo = db.Column(db.String(25), nullable=False)
    FechaCreacion = db.Column(db.DateTime, nullable=False)
    IDCentroGestion = db.Column(db.String(10), nullable=False)
    QFabricar = db.Column(db.Numeric(23, 8), nullable=False)
    QIniciada = db.Column(db.Numeric(23, 8), nullable=False)
    QFabricada = db.Column(db.Numeric(23, 8), nullable=False)
    QRechazada = db.Column(db.Numeric(23, 8), nullable=False)
    Estado = db.Column(db.Integer, nullable=False)
    FechaInicio = db.Column(db.DateTime, nullable=False)
    FechaFin = db.Column(db.DateTime)

    def serialize(self):
        return {
            'IDOrden': self.IDOrden,
            'NOrden': self.NOrden,
            'IDContador': self.IDContador,
            'IDArticulo': self.IDArticulo,
            'FechaCreacion': self.FechaCreacion,
            'IDCentroGestion': self.IDCentroGestion,
            'QFabricar': float(self.QFabricar),  
            'QIniciada': float(self.QIniciada),
            'QFabricada': float(self.QFabricada),
            'QRechazada': float(self.QRechazada),
            'Estado': self.Estado,
            'FechaInicio': self.FechaInicio,
            'FechaFin': self.FechaFin if self.FechaFin else None
        }